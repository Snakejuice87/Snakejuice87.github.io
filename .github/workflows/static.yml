# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
        
      - name: Proof HTML
  # You may pin to the exact commit or the version.
  # uses: anishathalye/proof-html@7dc4ab1eb4b36b12d0012657111b180770867139
  uses: anishathalye/proof-html@v2.1.2
  with:
    # The directory to scan
    directory: 
    # Check whether external anchors exist
    check_external_hash: # optional
    # Validate HTML
    check_html: # optional
    # Validate CSS
    check_css: # optional
    # Check images and URLs in Open Graph metadata
    check_opengraph: # optional
    # Check whether favicons are valid
    check_favicon: # optional
    # Allow images with empty alt tags
    ignore_empty_alt: # optional
    # Allow images with missing alt tags
    ignore_missing_alt: # optional
    # Allow anchors with missing href tags
    allow_missing_href: # optional
    # Require that links use HTTPS
    enforce_https: # optional
    # JSON-encoded map of domains to authorization tokens
    tokens: # optional
    # JSON-encoded map of URL rewrite rules
    swap_urls: # optional
    # Maximum number of concurrent requests
    max_concurrency: # optional
    # HTTP connection timeout
    connect_timeout: # optional
    # HTTP request timeout
    timeout: # optional
    # Newline-separated list of URLs to ignore
    ignore_url: # optional
    # Newline-separated list of URL regexes to ignore
    ignore_url_re: # optional
    # Number of times to retry checking links
    retries: # optional

    - name: HTML Preview
  # You may pin to the exact commit or the version.
  # uses: pavi2410/html-preview-action@9420cd81fbbe0035f59a39536ea5a0443daffa37
  uses: pavi2410/html-preview-action@v2
  with:
    # The HTML file you want to preview, relative to the root of the repo
    html_file: # default is index.html

    - name: Execute JavaScript inline
  # You may pin to the exact commit or the version.
  # uses: satackey/action-js-inline@bf6fcaf35de1ed03bcfd25a0a8b1fa4c551ec908
  uses: satackey/action-js-inline@v0.0.2
  with:
    # The package manager used to install the required packages.
    package-manager: # default is npm
    # Required package to run JavaScript snippet.
    required-packages: # optional
    # The JavaScript snippet to be executed.
    script: 

    - name: Run ESLint
  # You may pin to the exact commit or the version.
  # uses: stefanoeb/eslint-action@0b532bcd98dbed80a59071fa8986fcf1b1715be4
  uses: stefanoeb/eslint-action@1.0.2
  with:
    # Blob of files to lint
    files: # optional, default is .

  - name: Cache
  uses: actions/cache@v1.2.1
  with:
    # A directory to store and save the cache
    path: 
    # An explicit key for restoring and saving the cache
    key: 
    # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
    restore-keys: # optional
    
- name: Setup Go environment
  uses: actions/setup-go@v4.1.0
  with:
    # The Go version to download (if necessary) and use. Supports semver spec and ranges. Be sure to enclose this option in single quotation marks.
    go-version: # optional
    # Path to the go.mod or go.work file.
    go-version-file: # optional
    # Set this option to true if you want the action to always check for the latest available version that satisfies the version spec
    check-latest: # optional
    # Used to pull Go distributions from go-versions. Since there's a default, this is typically not supplied by the user. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
    token: default # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Used to specify whether caching is needed. Set to true, if you'd like to enable caching.
    cache: true # optional, default is true
    # Used to specify the path to a dependency file - go.sum
    cache-dependency-path: # optional
    # Target architecture for Go to use. Examples: x86, x64. Will use system architecture by default.
    architecture: # optional
